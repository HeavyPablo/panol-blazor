@inject IJSRuntime Js
@inject HttpClient Http

@using System.Net.Http
@using DataModel
@using FormModel


<div class="modal fade" id="FormuActivoModal" tabindex="-1" aria-labelledby="FormuActivoModal" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered ">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Bloqueo de Usuario</h5>
                <button type="button" class="close" @onclick="@(e => OpenModalCerrar())" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="col-12">

                    @if (ModeloUsuario != null)
                    {

                        @if (ModeloUsuario.perfil == "ALUMNO")
                        {

                            <div class="form-group">
                                <label for="username">Nombre:</label>
                                <input type="text" id="username" disabled class="form-control" @bind=@ModeloUsuario.alumno.nombre />


                            </div>

                            <div class="form-group">
                                <label for="appaterno">Apellido Paterno:</label>
                                <input type="text" id="appaterno" disabled class="form-control" @bind=@ModeloUsuario.alumno.apellidoPaterno />

                            </div>

                            <div class="form-group">
                                <label for="apmaterno">Apellido Materno:</label>
                                <input type="text" id="apmaterno" disabled class="form-control" @bind=@ModeloUsuario.alumno.apellidoMaterno />

                            </div>

                            <div class="form-group">
                                <label for="escuela">Escuela:</label>
                                <input type="text" id="escuela" disabled class="form-control" @bind=@ModeloUsuario.alumno.carrera.escuela.nombre />

                            </div>

                            <div class="form-group">
                                <label for="carrera">Carrera:</label>
                                <input type="text" id="carrera" disabled class="form-control" @bind=@ModeloUsuario.alumno.carrera.nombre />

                            </div>

                        }
                        else if (ModeloUsuario.perfil == "DOCENTE")
                        {
                            <div class="form-group">
                                <label for="username">Nombre:</label>
                                <input type="text" id="username" disabled class="form-control" @bind=@ModeloUsuario.docente.nombre />


                            </div>

                            <div class="form-group">
                                <label for="appaterno">Apellido Paterno:</label>
                                <input type="text" id="appaterno" disabled class="form-control" @bind=@ModeloUsuario.docente.apellidoPaterno />

                            </div>

                            <div class="form-group">
                                <label for="apmaterno">Apellido Materno:</label>
                                <input type="text" id="apmaterno" disabled class="form-control" @bind=@ModeloUsuario.docente.apellidoMaterno />

                            </div>

                            <div class="form-group">
                                <label for="escuela">Escuela:</label>
                                <input type="text" id="escuela" disabled class="form-control" @bind=@ModeloUsuario.docente.escuela.nombre />

                            </div>
                        }
                        else if (ModeloUsuario.perfil == "DIRECTOR")
                        {
                            <div class="form-group">
                                <label for="username">Nombre:</label>
                                <input type="text" id="username" disabled class="form-control" @bind=@ModeloUsuario.director.nombre />


                            </div>

                            <div class="form-group">
                                <label for="appaterno">Apellido Paterno:</label>
                                <input type="text" id="appaterno" disabled class="form-control" @bind=@ModeloUsuario.director.apellidoPaterno />

                            </div>

                            <div class="form-group">
                                <label for="apmaterno">Apellido Materno:</label>
                                <input type="text" id="apmaterno" disabled class="form-control" @bind=@ModeloUsuario.director.apellidoMaterno />

                            </div>

                            <div class="form-group">
                                <label for="escuela">Escuela:</label>
                                <input type="text" id="escuela" disabled class="form-control" @bind=@ModeloUsuario.director.escuela.nombre />

                            </div>
                        }
                        else if (ModeloUsuario.perfil == "COORDINADOR")
                        {
                            <div class="form-group">
                                <label for="username">Nombre:</label>
                                <input type="text" id="username" disabled class="form-control" @bind=@ModeloUsuario.coordinador.nombre />


                            </div>

                            <div class="form-group">
                                <label for="appaterno">Apellido Paterno:</label>
                                <input type="text" id="appaterno" disabled class="form-control" @bind=@ModeloUsuario.coordinador.apellidoPaterno />

                            </div>

                            <div class="form-group">
                                <label for="apmaterno">Apellido Materno:</label>
                                <input type="text" id="apmaterno" disabled class="form-control" @bind=@ModeloUsuario.coordinador.apellidoMaterno />

                            </div>

                            <div class="form-group">
                                <label for="escuela">Escuela:</label>
                                <input type="text" id="escuela" disabled class="form-control" @bind=@ModeloUsuario.coordinador.escuela.nombre />

                            </div>
                        }
                        else if (ModeloUsuario.perfil == "PANOLERO")
                        {
                            <div class="form-group">
                                <label for="username">Nombre:</label>
                                <input type="text" id="username" disabled class="form-control" @bind=@ModeloUsuario.panolero.nombre />


                            </div>

                            <div class="form-group">
                                <label for="appaterno">Apellido Paterno:</label>
                                <input type="text" id="appaterno" disabled class="form-control" @bind=@ModeloUsuario.panolero.apellidoPaterno />

                            </div>

                            <div class="form-group">
                                <label for="apmaterno">Apellido Materno:</label>
                                <input type="text" id="apmaterno" disabled class="form-control" @bind=@ModeloUsuario.panolero.apellidoMaterno />

                            </div>


                        }

                        <EditForm Model="@NuevoUsuarioBloqueadoModel" OnValidSubmit="HandleSubmit">
                            <DataAnnotationsValidator />
                            @*<ValidationSummary />*@


                            <div class="form-group">
                                <label for="razon">Justificación para activar usuario:</label>
                                <textarea class="form-control" rows="1" @bind="NuevoUsuarioBloqueadoModel.Razon"></textarea>
                                <ValidationMessage For="@(() => NuevoUsuarioBloqueadoModel.Razon)" />
                            </div>

                            <button type="submit" class="btn btn-success" value="Save">Confirmar Bloqueo</button>
                            @*<button type="reset" class="btn btn-success borrar">Borrar Datos</button>*@
                        </EditForm>


                    }
                    else
                    {
                        <div class="row justify-content-center">
                            <img src="images/loading.svg" alt="Cargando" />
                            <p> Cargando perfil</p>
                        </div>
                    }

                </div>

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" @onclick="@(e => OpenModalCerrar())" data-dismiss="modal">Salir</button>

            </div>
        </div>
    </div>
</div>

@code {


    [Parameter] public UsuarioModel ModeloUsuario { get; set; }

    private PanolBlazor.FormModel.NuevoFormularioBloqueoModel NuevoUsuarioBloqueadoModel = new FormModel.NuevoFormularioBloqueoModel();





    // Proceso de guardado

    private async Task HandleSubmit()
    {
        var response = await Js.Confirm("¿Estás seguro/a?", "Al confirmar quieres Bloquear a este usuario.", TipoMensajeSweetAlert.question);
        //string IdEditar = "";
        if (response)
        {
            if (ModeloUsuario.perfil == "ALUMNO")
            {
                var UsernameBloqueador = await Js.GetFromLocalStorage("username");
                var UsuarioBloqueadorModel = await Http.GetJsonAsync<PanolBlazor.DataModel.UsuarioModel>("http://localhost:8080/usuario/username/" + UsernameBloqueador);

                var requestMessage = new HttpRequestMessage()
                {
                    Method = new HttpMethod("POST"),
                    RequestUri = new Uri("http://localhost:8080/regactivo"),
                    Content = new StringContent(
                      @"{
                       ""idUsuarioRA"": """ + ModeloUsuario.id + @""",
                       ""nomUsuarioRA"": """ + ModeloUsuario.alumno.nombre + " " + ModeloUsuario.alumno.apellidoPaterno + @""",
                       ""perfilRA"": """ + ModeloUsuario.perfil + @""",
                       ""estadoRA"": """ + ModeloUsuario.estado + @""",
                       ""idResponsableRA"": """ + UsuarioBloqueadorModel.id + @""",
                       ""nomResponsableRA"": """ + UsuarioBloqueadorModel.username + @""",
                        ""perfilResponsableRA"": """ + UsuarioBloqueadorModel.perfil + @""",
                        ""escuelaRA"": """ + ModeloUsuario.alumno.carrera.escuela.nombre + @""",
                        ""fechaCreacionUsuarioRA"": """ + ModeloUsuario.fechaCreacion + @""",
                        ""carreraActivada"": """ + ModeloUsuario.alumno.carrera.nombre + @""",
                       ""justificacion"": """ + NuevoUsuarioBloqueadoModel.Razon

                  + @"""}"
                )



                };
                requestMessage.Content.Headers.ContentType = new System.Net.Http.Headers.MediaTypeHeaderValue("application/json");
                requestMessage.Content.Headers.TryAddWithoutValidation("x-custom-header", "value");

                var result = await Http.SendAsync(requestMessage);


                NuevoUsuarioBloqueadoModel = new FormModel.NuevoFormularioBloqueoModel();

            }
            else if (ModeloUsuario.perfil == "DIRECTOR")
            {

                var UsernameBloqueador = await Js.GetFromLocalStorage("username");
                var UsuarioBloqueadorModel = await Http.GetJsonAsync<PanolBlazor.DataModel.UsuarioModel>("http://localhost:8080/usuario/username/" + UsernameBloqueador);

                var requestMessage = new HttpRequestMessage()
                {
                    Method = new HttpMethod("POST"),
                    RequestUri = new Uri("http://localhost:8080/regactivo"),
                    Content = new StringContent(
                      @"{
                       ""idUsuarioRA"": """ + ModeloUsuario.id + @""",
                       ""nomUsuarioRA"": """ + ModeloUsuario.director.nombre + " " + ModeloUsuario.director.apellidoPaterno + @""",
                       ""perfilRA"": """ + ModeloUsuario.perfil + @""",
                        ""estadoRA"": """ + ModeloUsuario.estado + @""",
                       ""idResponsableRA"": """ + UsuarioBloqueadorModel.id + @""",
                       ""nomResponsableRA"": """ + UsuarioBloqueadorModel.username + @""",
                        ""perfilResponsableRA"": """ + UsuarioBloqueadorModel.perfil + @""",
                        ""escuelaRA"": """ + ModeloUsuario.director.escuela.nombre + @""",
                        ""fechaCreacionUsuarioRA"": """ + ModeloUsuario.fechaCreacion + @""",
                        ""carreraActivada"": """ + " " + @""",
                       ""justificacion"": """ + NuevoUsuarioBloqueadoModel.Razon

                  + @"""}"
                )



                };
                requestMessage.Content.Headers.ContentType = new System.Net.Http.Headers.MediaTypeHeaderValue("application/json");
                requestMessage.Content.Headers.TryAddWithoutValidation("x-custom-header", "value");

                var result = await Http.SendAsync(requestMessage);


                NuevoUsuarioBloqueadoModel = new FormModel.NuevoFormularioBloqueoModel();


            }
            else if (ModeloUsuario.perfil == "PANOLERO")
            {
                var UsernameBloqueador = await Js.GetFromLocalStorage("username");
                var UsuarioBloqueadorModel = await Http.GetJsonAsync<PanolBlazor.DataModel.UsuarioModel>("http://localhost:8080/usuario/username/" + UsernameBloqueador);

                var requestMessage = new HttpRequestMessage()
                {
                    Method = new HttpMethod("POST"),
                    RequestUri = new Uri("http://localhost:8080/regactivo"),
                    Content = new StringContent(
                      @"{
                       ""idUsuarioRA"": """ + ModeloUsuario.id + @""",
                       ""nomUsuarioRA"": """ + ModeloUsuario.panolero.nombre + " " + ModeloUsuario.panolero.apellidoPaterno + @""",
                       ""perfilRA"": """ + ModeloUsuario.perfil + @""",
                        ""estadoRA"": """ + ModeloUsuario.estado + @""",
                       ""idResponsableRA"": """ + UsuarioBloqueadorModel.id + @""",
                       ""nomResponsableRA"": """ + UsuarioBloqueadorModel.username + @""",
                        ""perfilResponsableRA"": """ + UsuarioBloqueadorModel.perfil + @""",
                        ""escuelaRA"": """ + " " + @""",
                        ""fechaCreacionUsuarioRA"": """ + ModeloUsuario.fechaCreacion + @""",
                        ""carreraActivado"": """ + " " + @""",
                       ""justificacion"": """ + NuevoUsuarioBloqueadoModel.Razon

                  + @"""}"
                )



                };
                requestMessage.Content.Headers.ContentType = new System.Net.Http.Headers.MediaTypeHeaderValue("application/json");
                requestMessage.Content.Headers.TryAddWithoutValidation("x-custom-header", "value");

                var result = await Http.SendAsync(requestMessage);


                NuevoUsuarioBloqueadoModel = new FormModel.NuevoFormularioBloqueoModel();
            }
            else if (ModeloUsuario.perfil == "COORDINADOR")
            {
                var UsernameBloqueador = await Js.GetFromLocalStorage("username");
                var UsuarioBloqueadorModel = await Http.GetJsonAsync<PanolBlazor.DataModel.UsuarioModel>("http://localhost:8080/usuario/username/" + UsernameBloqueador);

                var requestMessage = new HttpRequestMessage()
                {
                    Method = new HttpMethod("POST"),
                    RequestUri = new Uri("http://localhost:8080/regactivo"),
                    Content = new StringContent(
                      @"{
                       ""idUsuarioRA"": """ + ModeloUsuario.id + @""",
                       ""nomUsuarioRA"": """ + ModeloUsuario.coordinador.nombre + " " + ModeloUsuario.coordinador.apellidoPaterno + @""",
                       ""perfilRA"": """ + ModeloUsuario.perfil + @""",
                        ""estadoRA"": """ + ModeloUsuario.estado + @""",
                       ""idResponsableRA"": """ + UsuarioBloqueadorModel.id + @""",
                       ""nomResponsableRA"": """ + UsuarioBloqueadorModel.username + @""",
                        ""perfilResponsableRA"": """ + UsuarioBloqueadorModel.perfil + @""",
                        ""escuelaRA"": """ + ModeloUsuario.coordinador.escuela.nombre + @""",
                        ""fechaCreacionUsuarioRA"": """ + ModeloUsuario.fechaCreacion + @""",
                        ""carreraActivado"": """ + " " + @""",
                       ""justificacion"": """ + NuevoUsuarioBloqueadoModel.Razon

                  + @"""}"
                )



                };
                requestMessage.Content.Headers.ContentType = new System.Net.Http.Headers.MediaTypeHeaderValue("application/json");
                requestMessage.Content.Headers.TryAddWithoutValidation("x-custom-header", "value");

                var result = await Http.SendAsync(requestMessage);


                NuevoUsuarioBloqueadoModel = new FormModel.NuevoFormularioBloqueoModel();
            }
            else if (ModeloUsuario.perfil == "DOCENTE")
            {
                var UsernameBloqueador = await Js.GetFromLocalStorage("username");
                var UsuarioBloqueadorModel = await Http.GetJsonAsync<PanolBlazor.DataModel.UsuarioModel>("http://localhost:8080/usuario/username/" + UsernameBloqueador);

                var requestMessage = new HttpRequestMessage()
                {
                    Method = new HttpMethod("POST"),
                    RequestUri = new Uri("http://localhost:8080/regactivo"),
                    Content = new StringContent(
                      @"{
                       ""idUsuarioRA"": """ + ModeloUsuario.id + @""",
                       ""nomUsuarioRA"": """ + ModeloUsuario.docente.nombre + " " + ModeloUsuario.docente.apellidoPaterno + @""",
                       ""perfilRA"": """ + ModeloUsuario.perfil + @""",
                        ""estadoRA"": """ + ModeloUsuario.estado + @""",
                       ""idResponsableRA"": """ + UsuarioBloqueadorModel.id + @""",
                       ""nomResponsableRA"": """ + UsuarioBloqueadorModel.username + @""",
                        ""perfilResponsableRA"": """ + UsuarioBloqueadorModel.perfil + @""",
                        ""escuelaRA"": """ + ModeloUsuario.docente.escuela.nombre + @""",
                        ""fechaCreacionUsuarioRA"": """ + ModeloUsuario.fechaCreacion + @""",
                        ""carreraActivado"": """ + " " + @""",
                       ""justificacion"": """ + NuevoUsuarioBloqueadoModel.Razon

                  + @"""}"
                )



                };
                requestMessage.Content.Headers.ContentType = new System.Net.Http.Headers.MediaTypeHeaderValue("application/json");
                requestMessage.Content.Headers.TryAddWithoutValidation("x-custom-header", "value");

                var result = await Http.SendAsync(requestMessage);


                NuevoUsuarioBloqueadoModel = new FormModel.NuevoFormularioBloqueoModel();
            }


            await CambioEstado(ModeloUsuario.username);

            await Js.MostrarMensaje("Activado!", "Se ha activado correctamente al usuario.", TipoMensajeSweetAlert.success);

            await Js.CloseModal("FormuActivoModal");

        }

        //await OnRefresh.InvokeAsync(true);

    }


    private async Task CambioEstado(string usuario)
    {

        var requestMessage = new HttpRequestMessage()
        {
            Method = new HttpMethod("POST"),
            RequestUri = new Uri("http://localhost:8080/usuario/ActEst/" + usuario.ToString()),
            Content = new StringContent(
                    @"{""username"": """ + usuario + @""",
        ""estado"": """ + "activo" + @"""}"
                )
        };

        requestMessage.Content.Headers.ContentType = new System.Net.Http.Headers.MediaTypeHeaderValue("application/json");
        requestMessage.Content.Headers.TryAddWithoutValidation("x-custom-header", "value");

        var result = await Http.SendAsync(requestMessage);
        //await OnInitializedAsync();// buscar forma de hacer más eficiente este proceso

        Console.WriteLine(result);
    }

    private void OpenModalCerrar()
    {
        Js.CloseModal("FormuActivoModal");
    }

}
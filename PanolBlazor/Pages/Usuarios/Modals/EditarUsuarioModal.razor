@inject IJSRuntime Js
@inject HttpClient Http

@using System.Net.Http
@using DataModel
@using FormModel


<div class="modal fade" id="EditUsuarioModal" tabindex="-1" aria-labelledby="EditUsuarioModal" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-xl">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Editar Usuario</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="col-12">
                   
                    <div class="row">
                        @if (NuevoUsuarioModel != null && PerfilEditar == "ALUMNO")
                        {

                            <EditForm Model="@NuevoUsuarioModel" OnValidSubmit="HandleSubmit">
                                <DataAnnotationsValidator />
                                @*<ValidationSummary />*@


                                <div class="form-group">
                                    <label for="name">Nombre</label>
                                    <input type="text" id="name" class="form-control" @bind="NuevoUsuarioModel.alumno.nombre" />
                                    <ValidationMessage For="@(() => NuevoUsuarioModel.alumno.nombre)" />
                                </div>
                                <div class="form-group">
                                    <label for="ApPaterno">Apellido Paterno</label>
                                    <input type="text" id="ApPaterno" class="form-control" @bind="NuevoUsuarioModel.alumno.apellidoPaterno" />
                                    <ValidationMessage For="@(() => NuevoUsuarioModel.alumno.apellidoPaterno)" />
                                </div>
                                <div class="form-group">
                                    <label for="ApMaterno">Apellido Materno</label>
                                    <input type="text" id="ApMaterno" class="form-control" @bind="NuevoUsuarioModel.alumno.apellidoMaterno" />
                                    <ValidationMessage For="@(() => NuevoUsuarioModel.alumno.apellidoMaterno)" />
                                </div>
                                <div class="form-group">
                                    <label for="email">Email</label>
                                    <input type="email" id="email" class="form-control" @bind="NuevoUsuarioModel.alumno.correoAlumno" />
                                    <ValidationMessage For="@(() => NuevoUsuarioModel.alumno.correoAlumno)" />
                                </div>

                                <div class="form-group">
                                    <label for="phone">Teléfono</label>
                                    <input type="text" id="phone" class="form-control" @bind="NuevoUsuarioModel.alumno.telefono" />
                                    <ValidationMessage For="@(() => NuevoUsuarioModel.alumno.telefono)" />
                                </div>

                                <div class="form-group">
                                    <label for="rut">Rut</label>
                                    <input type="text" id="rut" class="form-control" @bind="NuevoUsuarioModel.alumno.rut" />
                                    <ValidationMessage For="@(() => NuevoUsuarioModel.alumno.rut)" />
                                </div>

                                <div class="form-group">
                                    <label for="perfilSelect">Perfil</label>
                                    <select class="form-control" id="perfilSelect" @bind="NuevoUsuarioModel.perfil">

                                        <option value="">--Eliga una opcion de perfil--</option>
                                        @foreach (var perfil in PerfilList)
                                        {
                                            <option value="@perfil.Code"> @perfil.Name </option>
                                        }
                                        }

                                    </select>

                                </div>
                                @if (NuevoUsuarioModel.perfil == "ALUMNO")
                                {
                                    <div class="form-group">
                                        <label for="escSelect">Carrera</label>
                                        <select class="form-control" id="escSelect" @bind="NuevoUsuarioModel.alumno.carrera.id">

                                            <option value="">--Eliga una carrera--</option>
                                            @foreach (var carrera in CarList)
                                            {
                                                <option value="@carrera.Code"> @carrera.Name </option>
                                            }
                                            }

                                        </select>

                                    </div>


                                }
                                @*else if (NuevoUsuarioModel.perfil == "DOCENTE" || NuevoUsuarioModel.perfil == "COORDINADOR" || NuevoUsuarioModel.perfil == "DIRECTOR")
                {
                    <div class="form-group">
                        <label for="escSelect">Escuela</label>
                        <select class="form-control" id="escSelect" @bind="@SelectedEsc">

                            <option value="">--Eliga una escuela--</option>
                            @foreach (var escuela in EscList)
                            {
                                <option value="@escuela.Code"> @escuela.Name </option>
                            }
                            }

                        </select>

                    </div>

                }*@

                                <button type="submit" class="btn btn-success" value="Save">Guardar Usuario</button>
                                <button type="reset" class="btn btn-success borrar">Borrar Datos</button>
                            </EditForm>
                        }
                        else if (NuevoUsuarioModel != null && PerfilEditar == "DIRECTOR")
                        {
                            <EditForm Model="@NuevoUsuarioModel" OnValidSubmit="HandleSubmit">
                                <DataAnnotationsValidator />
                                @*<ValidationSummary />*@


                                <div class="form-group">
                                    <label for="name">Nombre</label>
                                    <input type="text" id="name" class="form-control" @bind="NuevoUsuarioModel.director.nombre" />
                                    <ValidationMessage For="@(() => NuevoUsuarioModel.director.nombre)" />
                                </div>
                                <div class="form-group">
                                    <label for="ApPaterno">Apellido Paterno</label>
                                    <input type="text" id="ApPaterno" class="form-control" @bind="NuevoUsuarioModel.director.apellidoPaterno" />
                                    <ValidationMessage For="@(() => NuevoUsuarioModel.director.apellidoPaterno)" />
                                </div>
                                <div class="form-group">
                                    <label for="ApMaterno">Apellido Materno</label>
                                    <input type="text" id="ApMaterno" class="form-control" @bind="NuevoUsuarioModel.director.apellidoMaterno" />
                                    <ValidationMessage For="@(() => NuevoUsuarioModel.director.apellidoMaterno)" />
                                </div>
                                <div class="form-group">
                                    <label for="email">Email</label>
                                    <input type="email" id="email" class="form-control" @bind="NuevoUsuarioModel.director.correoDirector" />
                                    <ValidationMessage For="@(() => NuevoUsuarioModel.director.correoDirector)" />
                                </div>

                                <div class="form-group">
                                    <label for="phone">Teléfono</label>
                                    <input type="text" id="phone" class="form-control" @bind="NuevoUsuarioModel.director.telefono" />
                                    <ValidationMessage For="@(() => NuevoUsuarioModel.director.telefono)" />
                                </div>

                                <div class="form-group">
                                    <label for="rut">Rut</label>
                                    <input type="text" id="rut" class="form-control" @bind="NuevoUsuarioModel.director.rut" />
                                    <ValidationMessage For="@(() => NuevoUsuarioModel.director.rut)" />
                                </div>

                                <div class="form-group">
                                    <label for="perfilSelect">Perfil</label>
                                    <select class="form-control" id="perfilSelect" @bind="NuevoUsuarioModel.perfil">

                                        <option value="">--Eliga una opcion de perfil--</option>
                                        @foreach (var perfil in PerfilList)
                                        {
                                            <option value="@perfil.Code"> @perfil.Name </option>
                                        }
                                        }

                                    </select>

                                </div>



                                }
                                @if (NuevoUsuarioModel.perfil == "DOCENTE" || NuevoUsuarioModel.perfil == "COORDINADOR" || NuevoUsuarioModel.perfil == "DIRECTOR")
                                {
                                    <div class="form-group">
                                        <label for="escSelect">Escuela</label>
                                        <select class="form-control" id="escSelect" @bind="NuevoUsuarioModel.director.escuela.id">

                                            <option value="">--Eliga una escuela--</option>
                                            @foreach (var escuela in EscList)
                                            {
                                                <option value="@escuela.Code"> @escuela.Name </option>
                                            }
                                            }

                                        </select>

                                    </div>

                                }

                                <button type="submit" class="btn btn-success" value="Save">Guardar Usuario</button>
                                <button type="reset" class="btn btn-success borrar">Borrar Datos</button>
                            </EditForm>
                        }
                        else if (NuevoUsuarioModel != null && PerfilEditar == "COORDINADOR")
                        {
                            <EditForm Model="@NuevoUsuarioModel" OnValidSubmit="HandleSubmit">
                                <DataAnnotationsValidator />
                                @*<ValidationSummary />*@


                                <div class="form-group">
                                    <label for="name">Nombre</label>
                                    <input type="text" id="name" class="form-control" @bind="NuevoUsuarioModel.coordinador.nombre" />
                                    <ValidationMessage For="@(() => NuevoUsuarioModel.coordinador.nombre)" />
                                </div>
                                <div class="form-group">
                                    <label for="ApPaterno">Apellido Paterno</label>
                                    <input type="text" id="ApPaterno" class="form-control" @bind="NuevoUsuarioModel.coordinador.apellidoPaterno" />
                                    <ValidationMessage For="@(() => NuevoUsuarioModel.coordinador.apellidoPaterno)" />
                                </div>
                                <div class="form-group">
                                    <label for="ApMaterno">Apellido Materno</label>
                                    <input type="text" id="ApMaterno" class="form-control" @bind="NuevoUsuarioModel.coordinador.apellidoMaterno" />
                                    <ValidationMessage For="@(() => NuevoUsuarioModel.coordinador.apellidoMaterno)" />
                                </div>
                                <div class="form-group">
                                    <label for="email">Email</label>
                                    <input type="email" id="email" class="form-control" @bind="NuevoUsuarioModel.coordinador.correoCoordinador" />
                                    <ValidationMessage For="@(() => NuevoUsuarioModel.coordinador.correoCoordinador)" />
                                </div>

                                <div class="form-group">
                                    <label for="phone">Teléfono</label>
                                    <input type="text" id="phone" class="form-control" @bind="NuevoUsuarioModel.coordinador.telefono" />
                                    <ValidationMessage For="@(() => NuevoUsuarioModel.coordinador.telefono)" />
                                </div>

                                <div class="form-group">
                                    <label for="rut">Rut</label>
                                    <input type="text" id="rut" class="form-control" @bind="NuevoUsuarioModel.coordinador.rut" />
                                    <ValidationMessage For="@(() => NuevoUsuarioModel.coordinador.rut)" />
                                </div>

                                <div class="form-group">
                                    <label for="perfilSelect">Perfil</label>
                                    <select class="form-control" id="perfilSelect" @bind="NuevoUsuarioModel.perfil">

                                        <option value="">--Eliga una opcion de perfil--</option>
                                        @foreach (var perfil in PerfilList)
                                        {
                                            <option value="@perfil.Code"> @perfil.Name </option>
                                        }
                                        }

                                    </select>

                                </div>



                                }
                                @if (NuevoUsuarioModel.perfil == "DOCENTE" || NuevoUsuarioModel.perfil == "COORDINADOR" || NuevoUsuarioModel.perfil == "DIRECTOR")
                                {
                                    <div class="form-group">
                                        <label for="escSelect">Escuela</label>
                                        <select class="form-control" id="escSelect" @bind="NuevoUsuarioModel.coordinador.escuela.id">

                                            <option value="">--Eliga una escuela--</option>
                                            @foreach (var escuela in EscList)
                                            {
                                                <option value="@escuela.Code"> @escuela.Name </option>
                                            }
                                            }

                                        </select>

                                    </div>

                                }

                                <button type="submit" class="btn btn-success" value="Save">Guardar Usuario</button>
                                <button type="reset" class="btn btn-success borrar">Borrar Datos</button>
                            </EditForm>
                        }
                        else if (NuevoUsuarioModel != null && PerfilEditar == "DOCENTE")
                        {
                            <EditForm Model="@NuevoUsuarioModel" OnValidSubmit="HandleSubmit">
                                <DataAnnotationsValidator />
                                @*<ValidationSummary />*@


                                <div class="form-group">
                                    <label for="name">Nombre</label>
                                    <input type="text" id="name" class="form-control" @bind="NuevoUsuarioModel.docente.nombre" />
                                    <ValidationMessage For="@(() => NuevoUsuarioModel.docente.nombre)" />
                                </div>
                                <div class="form-group">
                                    <label for="ApPaterno">Apellido Paterno</label>
                                    <input type="text" id="ApPaterno" class="form-control" @bind="NuevoUsuarioModel.docente.apellidoPaterno" />
                                    <ValidationMessage For="@(() => NuevoUsuarioModel.docente.apellidoPaterno)" />
                                </div>
                                <div class="form-group">
                                    <label for="ApMaterno">Apellido Materno</label>
                                    <input type="text" id="ApMaterno" class="form-control" @bind="NuevoUsuarioModel.docente.apellidoMaterno" />
                                    <ValidationMessage For="@(() => NuevoUsuarioModel.docente.apellidoMaterno)" />
                                </div>
                                <div class="form-group">
                                    <label for="email">Email</label>
                                    <input type="email" id="email" class="form-control" @bind="NuevoUsuarioModel.docente.correoDocente" />
                                    <ValidationMessage For="@(() => NuevoUsuarioModel.docente.correoDocente)" />
                                </div>

                                <div class="form-group">
                                    <label for="phone">Teléfono</label>
                                    <input type="text" id="phone" class="form-control" @bind="NuevoUsuarioModel.docente.telefono" />
                                    <ValidationMessage For="@(() => NuevoUsuarioModel.docente.telefono)" />
                                </div>

                                <div class="form-group">
                                    <label for="rut">Rut</label>
                                    <input type="text" id="rut" class="form-control" @bind="NuevoUsuarioModel.docente.rut" />
                                    <ValidationMessage For="@(() => NuevoUsuarioModel.docente.rut)" />
                                </div>

                                <div class="form-group">
                                    <label for="perfilSelect">Perfil</label>
                                    <select class="form-control" id="perfilSelect" @bind="NuevoUsuarioModel.perfil">

                                        <option value="">--Eliga una opcion de perfil--</option>
                                        @foreach (var perfil in PerfilList)
                                        {
                                            <option value="@perfil.Code"> @perfil.Name </option>
                                        }
                                        }

                                    </select>

                                </div>



                                }
                                @if (NuevoUsuarioModel.perfil == "DOCENTE" || NuevoUsuarioModel.perfil == "COORDINADOR" || NuevoUsuarioModel.perfil == "DIRECTOR")
                                {
                                    <div class="form-group">
                                        <label for="escSelect">Escuela</label>
                                        <select class="form-control" id="escSelect" @bind="NuevoUsuarioModel.docente.escuela.id">

                                            <option value="">--Eliga una escuela--</option>
                                            @foreach (var escuela in EscList)
                                            {
                                                <option value="@escuela.Code"> @escuela.Name </option>
                                            }
                                            }

                                        </select>

                                    </div>

                                }

                                <button type="submit" class="btn btn-success" value="Save">Guardar Usuario</button>
                                <button type="reset" class="btn btn-success borrar">Borrar Datos</button>
                            </EditForm>
                        }
                        else if (NuevoUsuarioModel != null && PerfilEditar == "PANOLERO")
                        {
                            <EditForm Model="@NuevoUsuarioModel" OnValidSubmit="HandleSubmit">
                                <DataAnnotationsValidator />
                                @*<ValidationSummary />*@


                                <div class="form-group">
                                    <label for="name">Nombre</label>
                                    <input type="text" id="name" class="form-control" @bind="NuevoUsuarioModel.panolero.nombre" />
                                    <ValidationMessage For="@(() => NuevoUsuarioModel.panolero.nombre)" />
                                </div>
                                <div class="form-group">
                                    <label for="ApPaterno">Apellido Paterno</label>
                                    <input type="text" id="ApPaterno" class="form-control" @bind="NuevoUsuarioModel.panolero.apellidoPaterno" />
                                    <ValidationMessage For="@(() => NuevoUsuarioModel.panolero.apellidoPaterno)" />
                                </div>
                                <div class="form-group">
                                    <label for="ApMaterno">Apellido Materno</label>
                                    <input type="text" id="ApMaterno" class="form-control" @bind="NuevoUsuarioModel.panolero.apellidoMaterno" />
                                    <ValidationMessage For="@(() => NuevoUsuarioModel.panolero.apellidoMaterno)" />
                                </div>
                                <div class="form-group">
                                    <label for="email">Email</label>
                                    <input type="email" id="email" class="form-control" @bind="NuevoUsuarioModel.panolero.correoPanolero" />
                                    <ValidationMessage For="@(() => NuevoUsuarioModel.panolero.correoPanolero)" />
                                </div>

                                <div class="form-group">
                                    <label for="phone">Teléfono</label>
                                    <input type="text" id="phone" class="form-control" @bind="NuevoUsuarioModel.panolero.telefono" />
                                    <ValidationMessage For="@(() => NuevoUsuarioModel.panolero.telefono)" />
                                </div>

                                <div class="form-group">
                                    <label for="rut">Rut</label>
                                    <input type="text" id="rut" class="form-control" @bind="NuevoUsuarioModel.panolero.rut" />
                                    <ValidationMessage For="@(() => NuevoUsuarioModel.panolero.rut)" />
                                </div>

                                <div class="form-group">
                                    <label for="perfilSelect">Perfil</label>
                                    <select class="form-control" id="perfilSelect" @bind="NuevoUsuarioModel.perfil">

                                        <option value="">--Eliga una opcion de perfil--</option>
                                        @foreach (var perfil in PerfilList)
                                        {
                                            <option value="@perfil.Code"> @perfil.Name </option>
                                        }
                                        }

                                    </select>

                                </div>



                                }
                                @*@if (NuevoUsuarioModel.perfil == "DOCENTE" || NuevoUsuarioModel.perfil == "COORDINADOR" || NuevoUsuarioModel.perfil == "DIRECTOR")
                                {
                                    <div class="form-group">
                                        <label for="escSelect">Escuela</label>
                                        <select class="form-control" id="escSelect" @bind="NuevoUsuarioModel.director.escuela.id">

                                            <option value="">--Eliga una escuela--</option>
                                            @foreach (var escuela in EscList)
                                            {
                                                <option value="@escuela.Code"> @escuela.Name </option>
                                            }
                                            }

                                        </select>

                                    </div>

                                }*@

                                <button type="submit" class="btn btn-success" value="Save">Guardar Usuario</button>
                                <button type="reset" class="btn btn-success borrar">Borrar Datos</button>
                            </EditForm>
                        }
                        else
                        {
                            <div class="row justify-content-center">
                                <img src="images/loading.svg" alt="Cargando" />
                            </div>
                        }

                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Salir</button>

            </div>
        </div>
    </div>
</div>


@code {
    [Parameter] public int IdEditar { get; set; }
    [Parameter] public string Username { get; set; }
    [Parameter] public string PerfilEditar { get; set; }
    [Parameter] public EventCallback<Boolean> OnRefresh { get; set; }
    //private PanolBlazor.FormModel.NuevoUsuarioModel NuevoUsuarioModel = new FormModel.NuevoUsuarioModel();

    private PanolBlazor.DataModel.UsuarioModel NuevoUsuarioModel;
    // Seleccionar opciones de perfil
    string selectedOpc;

    string SelectedOpc
    {
        get => selectedOpc;
        set
        {
            selectedOpc = value;

        }
    }

    List<Perfil> PerfilList = new List<Perfil>() { new Perfil ("ALUMNO", "Alumno"),
                                                      new Perfil ("DOCENTE", "Docente"),
                                                      new Perfil ("COORDINADOR", "Coordinador"),
                                                      new Perfil ("DIRECTOR", "Director"),
                                                      new Perfil ("PANOLERO", "Pañolero")
                                                                                };

    public class Perfil
    {

        public Perfil(string code, string name)
        {
            Code = code;
            Name = name;
        }
        public string Code { get; set; }
        public string Name { get; set; }

    }

    // Seleccionar opciones de escuela

    string selectedEsc;

    string SelectedEsc
    {
        get => selectedEsc;
        set
        {
            selectedEsc = value;

        }
    }

    List<Escuela> EscList = new List<Escuela>() { new Escuela ("1", "Escuela de Ingeniería"),
                                                      new Escuela ("2", "Escuela de Informática y Telecomunicaciones"),
                                                      new Escuela ("3", "Escuela de Construcción"),
                                                      new Escuela ("4", "Escuela de Administración y Negocios")  };

    public class Escuela
    {

        public Escuela(string code, string name)
        {
            Code = code;
            Name = name;
        }
        public string Code { get; set; }
        public string Name { get; set; }

    }
    // Seleccionar opciones de Carrera

    string selectedCar;

    string SelectedCar
    {
        get => selectedCar;
        set
        {
            selectedCar = value;

        }
    }

    List<Carrera> CarList = new List<Carrera>() {     new Carrera ("1", "Técnico en Mecánica Automotriz y Autotrónica"),
                                                      new Carrera ("2", "Ingeniería en Mecánica Automotriz y Autotrónica"),
                                                      new Carrera ("3", "Administración de Redes y Telecomunicaciones"),
                                                      new Carrera ("4", "Analista Programador Computacional"),
                                                      new Carrera ("5", "Ingeniería en Conectividad y Redes"),
                                                      new Carrera ("6", "Ingeniería en Informática"),
                                                      new Carrera ("7", "Técnico en Construcción"),
                                                      new Carrera ("8", "Ingeniería en Construcción"),
                                                      new Carrera ("9", "Ingeniería en Prevención de Riesgos"),
                                                      new Carrera ("10", "Técnico en Marketing"),
                                                      new Carrera ("11", "Técnico en Gestión de Personas"),
                                                      new Carrera ("12", "Contabilidad General Mención Legislación Tributaria"),
                                                      new Carrera ("13", "Auditoría"),
                                                      new Carrera ("14", "Ingeniería en Administración Mención Gestión de Personas"),
                                                      new Carrera ("15", "Ingeniería en Gestión Logística"),
                                                      new Carrera ("16", "Ingeniería en Administración Mención Marketing"),
                                                      new Carrera ("17", "Ingeniería en Administración Mención Finanzas")

    };

    public class Carrera
    {

        public Carrera(string code, string name)
        {
            Code = code;
            Name = name;
        }
        public string Code { get; set; }
        public string Name { get; set; }

    }

    // Proceso de guardado

    private async Task HandleSubmit()
    {
        var response = await Js.Confirm("¿Estás seguro/a?", "Al confirmar quieres editar a este usuario.", TipoMensajeSweetAlert.question);

        if (response)
        {
            if (PerfilEditar == "PANOLERO")
            {

                var requestMessage = new HttpRequestMessage()
                {
                    Method = new HttpMethod("POST"),
                    RequestUri = new Uri("http://localhost:8080/panolero/" + IdEditar),
                    Content = new StringContent(
                   @"{
                   ""rut"": """ + NuevoUsuarioModel.panolero.rut + @""",
                   ""apellidoPaterno"": """ + NuevoUsuarioModel.panolero.apellidoPaterno + @""",
                   ""apellidoMaterno"": """ + NuevoUsuarioModel.panolero.apellidoMaterno + @""",
                   ""nombre"": """ + NuevoUsuarioModel.panolero.nombre + @""",
                   ""telefono"": """ + NuevoUsuarioModel.panolero.telefono + @""",
                   ""correoPanolero"": """ + NuevoUsuarioModel.panolero.correoPanolero + @"""}"
                    )
                };
                requestMessage.Content.Headers.ContentType = new System.Net.Http.Headers.MediaTypeHeaderValue("application/json");
                requestMessage.Content.Headers.TryAddWithoutValidation("x-custom-header", "value");

                var result = await Http.SendAsync(requestMessage);
                Console.WriteLine(result);
            }
            else if (PerfilEditar == "ALUMNO")
            {

                var requestMessage = new HttpRequestMessage()
                {
                    Method = new HttpMethod("POST"),
                    RequestUri = new Uri("http://localhost:8080/alumno/" + IdEditar),
                    Content = new StringContent(
                        @"{
                   ""apellidoPaterno"": """ + NuevoUsuarioModel.alumno.apellidoPaterno + @""",
                   ""apellidoMaterno"": """ + NuevoUsuarioModel.alumno.apellidoMaterno + @""",
                   ""nombre"": """ + NuevoUsuarioModel.alumno.nombre + @""",
                   ""telefono"": """ + NuevoUsuarioModel.alumno.telefono + @""",
                   ""correoAlumno"": """ + NuevoUsuarioModel.alumno.correoAlumno + @""",
                   ""carrera"": """ + NuevoUsuarioModel.alumno.carrera.id + @"""}"
                    )
                };
                requestMessage.Content.Headers.ContentType = new System.Net.Http.Headers.MediaTypeHeaderValue("application/json");
                requestMessage.Content.Headers.TryAddWithoutValidation("x-custom-header", "value");

                var result = await Http.SendAsync(requestMessage);
                Console.WriteLine(result);
            }
            else if (PerfilEditar == "DOCENTE")
            {
                var requestMessage = new HttpRequestMessage()
                {
                    Method = new HttpMethod("POST"),
                    RequestUri = new Uri("http://localhost:8080/docente/"+ IdEditar),
                    Content = new StringContent(
                        @"{  
                    ""rut"": """ + NuevoUsuarioModel.docente.rut + @""",
                   ""apellidoPaterno"": """ + NuevoUsuarioModel.docente.apellidoPaterno + @""",
                   ""apellidoMaterno"": """ + NuevoUsuarioModel.docente.apellidoMaterno + @""",
                   ""nombre"": """ + NuevoUsuarioModel.docente.nombre + @""",
                   ""telefono"": """ + NuevoUsuarioModel.docente.telefono + @""",
                   ""correoDocente"": """ + NuevoUsuarioModel.docente.correoDocente + @""",
                   ""escuela"": """ + NuevoUsuarioModel.docente.escuela.id + @"""}"
                    )
                };
                requestMessage.Content.Headers.ContentType = new System.Net.Http.Headers.MediaTypeHeaderValue("application/json");
                requestMessage.Content.Headers.TryAddWithoutValidation("x-custom-header", "value");

                var result = await Http.SendAsync(requestMessage);
                Console.WriteLine(result);
            }
            else if (PerfilEditar == "COORDINADOR")
            {
                var requestMessage = new HttpRequestMessage()
                {
                    Method = new HttpMethod("POST"),
                    RequestUri = new Uri("http://localhost:8080/coordinador/"+ IdEditar),
                    Content = new StringContent(
                         @"{  
                    ""rut"": """ + NuevoUsuarioModel.coordinador.rut + @""",
                   ""apellidoPaterno"": """ + NuevoUsuarioModel.coordinador.apellidoPaterno + @""",
                   ""apellidoMaterno"": """ + NuevoUsuarioModel.coordinador.apellidoMaterno + @""",
                   ""nombre"": """ + NuevoUsuarioModel.coordinador.nombre + @""",
                   ""telefono"": """ + NuevoUsuarioModel.coordinador.telefono + @""",
                   ""correoCoordinador"": """ + NuevoUsuarioModel.coordinador.correoCoordinador + @""",
                   ""escuela"": """ + NuevoUsuarioModel.coordinador.escuela.id + @"""}"
                    )
                };
                requestMessage.Content.Headers.ContentType = new System.Net.Http.Headers.MediaTypeHeaderValue("application/json");
                requestMessage.Content.Headers.TryAddWithoutValidation("x-custom-header", "value");

                var result = await Http.SendAsync(requestMessage);
                Console.WriteLine(result);
            }
            else if (PerfilEditar == "DIRECTOR")
            {
                var requestMessage = new HttpRequestMessage()
                {
                    Method = new HttpMethod("POST"),
                    RequestUri = new Uri("http://localhost:8080/director/"+ IdEditar),
                    Content = new StringContent(
                         @"{  
                    ""rut"": """ + NuevoUsuarioModel.director.rut + @""",
                   ""apellidoPaterno"": """ + NuevoUsuarioModel.director.apellidoPaterno + @""",
                   ""apellidoMaterno"": """ + NuevoUsuarioModel.director.apellidoMaterno + @""",
                   ""nombre"": """ + NuevoUsuarioModel.director.nombre + @""",
                   ""telefono"": """ + NuevoUsuarioModel.director.telefono + @""",
                   ""correoDirector"": """ + NuevoUsuarioModel.director.correoDirector + @""",
                   ""escuela"": """ + NuevoUsuarioModel.director.escuela.id + @"""}"
                    )
                };
                requestMessage.Content.Headers.ContentType = new System.Net.Http.Headers.MediaTypeHeaderValue("application/json");
                requestMessage.Content.Headers.TryAddWithoutValidation("x-custom-header", "value");

                var result = await Http.SendAsync(requestMessage);
                Console.WriteLine(result);
            };






            await Js.MostrarMensaje("Guardado!", "Se ha modificado correctamente el usuario.", TipoMensajeSweetAlert.success);
            
            await OnRefresh.InvokeAsync(true);
            



        }
    }


    protected override async Task OnInitializedAsync()
    //protected override async Task OnAfterRenderAsync(bool firstRender)
    //private async Task Algo()
    {
        Console.WriteLine(Username + " esto es ModalInterno");
        await Task.Delay(5000);
        NuevoUsuarioModel = await Http.GetJsonAsync<PanolBlazor.DataModel.UsuarioModel>("http://localhost:8080/usuario/username/" + Username);
        Console.WriteLine(NuevoUsuarioModel);
    }
}
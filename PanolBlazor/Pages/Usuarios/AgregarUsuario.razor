@page "/usuarios/agregar"
@attribute [Authorize]
@layout Layout.AdmUsuarioLayout
@using System.Net.Http
@inject HttpClient Http
@using System.Net.Http
@inject IJSRuntime Js
@inject NavigationManager Navigation

<h3>Agregar a un Usuario</h3>

<div>
    <EditForm Model="@NuevoUsuarioModel" OnValidSubmit="HandleSubmit">
        <DataAnnotationsValidator />
        @*<ValidationSummary />*@
        <div class="form-group">
            <label for="username">Nombre de Usuario</label>
            <input type="text" id="username" class="form-control" @bind="NuevoUsuarioModel.Username" />
            <ValidationMessage For="@(() => NuevoUsuarioModel.Username)" />
        </div>
        <div class="form-group">
            <label for="name">Nombre</label>
            <input type="text" id="name" class="form-control" @bind="NuevoUsuarioModel.Nombre" />
            <ValidationMessage For="@(() => NuevoUsuarioModel.Nombre)" />
        </div>
        <div class="form-group">
            <label for="ApPaterno">Apellido Paterno</label>
            <input type="text" id="ApPaterno" class="form-control" @bind="NuevoUsuarioModel.ApPaterno" />
            <ValidationMessage For="@(() => NuevoUsuarioModel.ApPaterno)" />
        </div>
        <div class="form-group">
            <label for="ApMaterno">Apellido Materno</label>
            <input type="text" id="ApMaterno" class="form-control" @bind="NuevoUsuarioModel.ApMaterno" />
            <ValidationMessage For="@(() => NuevoUsuarioModel.ApMaterno)" />
        </div>
        <div class="form-group">
            <label for="email">Email</label>
            <input type="email" id="email" class="form-control" @bind="NuevoUsuarioModel.Email" />
            <ValidationMessage For="@(() => NuevoUsuarioModel.Email)" />
        </div>

        <div class="form-group">
            <label for="phone">Teléfono</label>
            <input type="text" id="phone" class="form-control" @bind="NuevoUsuarioModel.Telefono" />
            <ValidationMessage For="@(() => NuevoUsuarioModel.Telefono)" />
        </div>

        <div class="form-group">
            <label for="rut">Rut</label>
            <input type="text" id="rut" class="form-control" @bind="NuevoUsuarioModel.rut" />
            <ValidationMessage For="@(() => NuevoUsuarioModel.rut)" />
        </div>
        <div class="form-group">
            <label for="perfilSelect">Perfil</label>
            <select class="form-control opcion" id="perfilSelect" @bind="NuevoUsuarioModel.TipoPerfil">
                <option value="">Seleccione un tipo de perfil</option>
                <option value="ALUMNO">ALUMNO</option>
                <option value="DOCENTE">DOCENTE</option>
                <option value="COORDINADOR">COORDINADOR</option>
                <option value="DIRECTOR">DIRECTOR</option>
                <option value="PANOLERO">PANOLERO</option>
            </select>
            <ValidationMessage For="@(() => NuevoUsuarioModel.TipoPerfil)" />


        </div>
        @*@if (== "ALUMNO") {



            }*@

        <button type="submit" class="btn btn-success">Guardar Usuario</button>
        <button type="reset" class="btn btn-success borrar">Borrar Datos</button>
    </EditForm>
</div>

@code {
    private PanolBlazor.FormModel.NuevoUsuarioModel NuevoUsuarioModel = new FormModel.NuevoUsuarioModel();


    private async Task HandleSubmit()
    {
        var response = await Js.Confirm("¿Estás seguro/a?", "Al confirmar se agregara a este usuario.", TipoMensajeSweetAlert.question);

        if (response)
        {

            var requestMessage = new HttpRequestMessage()
            {
                Method = new HttpMethod("POST"),
                RequestUri = new Uri("http://localhost:8080/usuario"),
                Content = new StringContent(
                    @"{""username"": """ + NuevoUsuarioModel.Username + @""",
       ""password"": """ + NuevoUsuarioModel.rut + @""",
       ""perfil"": """ + NuevoUsuarioModel.TipoPerfil + @""",
       ""rut"": """ + NuevoUsuarioModel.rut + @""",
       ""apellidoPaterno"": """ + NuevoUsuarioModel.ApPaterno + @""",
       ""apellidoMaterno"": """ + NuevoUsuarioModel.ApMaterno + @""",
       ""nombre"": """ + NuevoUsuarioModel.Nombre + @""",
       ""telefono"": """ + NuevoUsuarioModel.Telefono + @""",
       ""correoPanolero"": """ + NuevoUsuarioModel.Email + @"""}"
                )
            };

            requestMessage.Content.Headers.ContentType = new System.Net.Http.Headers.MediaTypeHeaderValue("application/json");
            requestMessage.Content.Headers.TryAddWithoutValidation("x-custom-header", "value");

            var result = await Http.SendAsync(requestMessage);

            Console.WriteLine(result);
            await Js.MostrarMensaje("Guardado!", "Se ha creado correctamente el usuario.", TipoMensajeSweetAlert.success);

        }
    }
}




@page "/solicitudes/agregar"
@layout Layout.SolicitudesLayout
@attribute [Authorize]

@inject HttpClient Http
@inject IJSRuntime Js;
@inject NavigationManager Navigate

@using System.Net.Http
@using DataModel
@using Modals

    <div class="py-3 col-12">
        <div class="shadow card">
            <div class="card-body">
                <div class="col-12">
                    <div class="row justify-content-between">
                        <div class="d-flex">
                            <div class="px-2">
                                <h3>Crear Solicitud</h3>
                            </div>
                        </div>
                        <button type="button" class="btn btn-dark"><span class="oi oi-arrow-thick-left"></span> Atrás</button>
                    </div>
                </div>
            </div>
        </div>

        <div class="row py-3">
            <div class="pr-3 col-6">
                <div class="shadow card">
                    <div class="card-body">
                        <div class="col-12">
                            <div class="row justify-content-between">
                                <h4>Información</h4>
                            </div>
                        </div>
                        <EditForm Model="Solicitud" OnValidSubmit="CreateSolicitud">
                            <div class="form-row align-items-end">
                                <div class="col-4">
                                    <label>Tipo de Solicitud</label>
                                    <InputSelect class="form-control" @bind-Value="TipoSolicitud">
                                        <option value="NORMAL">Normal</option>
                                        <option value="ESPECIAL">Especial</option>
                                    </InputSelect>
                                </div>
                                @if (TipoSolicitud == "ESPECIAL")
                                {
                                    <div class="col-4">
                                        <div class="align-self-end">
                                            <label>Dias solicitados</label>
                                            <select class="form-control" @bind="MyProperty">
                                                <option value="1">1</option>
                                                <option value="2">2</option>
                                                <option value="3">3</option>
                                                <option value="4">4</option>
                                                <option value="5">5</option>
                                            </select>
                                        </div>
                                    </div>
                                    <div class="col-4 d-flex justify-content-center flex-wrap">
                                        <p class="col-12 text-center text-muted mb-2">Fecha devolución </p>
                                        <p class="text-center badge badge-pill badge-dark mb-0" style="font-size:large">@FechaDeEntrega</p>
                                    </div>
                                }
                            </div>
                            <hr />
                            <div class="form-group">
                                <div class="col-12 py-2">
                                    <div class="row justify-content-between">
                                        <label>Nombre solicitante</label>
                                        <button type="button" class="btn btn-primary btn-sm" @onclick="@(e => OpenModal("ChangeUsuarioModal"))">Cambiar Usuario</button>
                                    </div>
                                </div>
                                <input type="text" class="form-control" disabled @bind="NombreSolicitante" />
                            </div>

                            <div class="form-row">
                                <div class="form-group col-6">
                                    <label>Rut solicitante</label>
                                    <input type="text" class="form-control" disabled @bind="RutSolicitante" />
                                </div>
                                <div class="form-group col-6">
                                    <label>Perfil solicitante</label>
                                    <input type="text" class="form-control" disabled @bind="PerfilSolicitante" />
                                </div>
                            </div>

                            <div class="form-group">
                                <label>Escuela solicitante</label>
                                <input type="text" class="form-control" disabled @bind="EscuelaSolicitante" />
                            </div>
                            <hr />
                            <div class="form-group">
                                <label>Nombre panolero responsable</label>
                                <input type="text" class="form-control" disabled @bind="NombrePanolero" />
                            </div>
                            <div class="form-group">
                                <label>Comentarios</label>
                                <textarea class="form-control" rows="3" @bind="Solicitud.comentario"></textarea>
                            </div>
                        </EditForm>
                    </div>
                </div>
            </div>
            <div class="pl-3 col-6">
                <div class="shadow card">
                    <div class="card-body">
                        <div class="col-12">
                            <div class="row justify-content-between">
                                <h4>Productos</h4>
                                @if (EscuelaSolicitante != "")
                                {
                                    <button type="button" class="btn btn-outline-primary" @onclick="@(e => OpenModal("AddProductosModal"))"><span class="oi oi-plus"></span></button>
                                }
                                else
                                {
                                    <button type="button" class="btn font-italic" disabled>Seleccione usuario antes de ver los materiales <span class="oi oi-plus"></span></button>
                                }

                            </div>
                        </div>
                        <div class="py-3">
                            <div class="table-responsive">
                                <table class="table">
                                    <thead class="thead-dark">
                                        <tr>
                                            <th scope="col">Id</th>
                                            <th scope="col">Nombre</th>
                                            <th scope="col">Subcategoria</th>
                                            <th scope="col">Categoria</th>
                                            <th scope="col">Escuela</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @if (Solicitud.productos != null)
                                        {
                                            @foreach (ProductoModel Producto in Solicitud.productos)
                                            {
                                                <tr>
                                                    <th scope="row">@Producto.id</th>
                                                    <td>@Producto.nombre</td>
                                                    <td>@Producto.subcategoria.nombre</td>
                                                    <td>@Producto.subcategoria.categoria.nombre</td>
                                                    <td>@Producto.escuela.nombre</td>
                                                </tr>
                                            }
                                        }
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="py-3">
                    <button class="btn btn-success btn-lg btn-block" @onclick="CreateSolicitud"><span class="oi oi-check"></span> Guardar</button>
                </div>
            </div>
        </div>
    </div>

<PanolBlazor.Pages.Solicitudes.Modals.EditProductosModal ProductosSolicitud="Productos" Solicitud="Solicitud" OnRefresh="RefreshProductos" ClickOnMe="clickToModalProductos"></PanolBlazor.Pages.Solicitudes.Modals.EditProductosModal>
<PanolBlazor.Pages.Solicitudes.Modals.ChangeUsuarioModal Solicitante="Usuario" Solicitud="Solicitud" OnRefresh="RefreshSolicitante"></PanolBlazor.Pages.Solicitudes.Modals.ChangeUsuarioModal>

@code {
    string TipoSolicitud = "NORMAL";
    string NombreSolicitante = "";
    string RutSolicitante = "";
    string PerfilSolicitante = "";
    string EscuelaSolicitante = "";
    string NombrePanolero = "";
    string DiasSolicitados = "0";
    string FechaDeEntrega = "Ingrese dias";
    public SolicitudModel Solicitud = new SolicitudModel();
    public List<ProductoModel> Productos = new List<ProductoModel>();
    public PanoleroModel Panolero = new PanoleroModel();
    public UsuarioModel Usuario = new UsuarioModel();
    public string MyProperty
    {
        get { return DiasSolicitados; }
        set
        {
            DiasSolicitados = value;
            getFechaDevolucion();
        }
    }
    public bool clickToModalProductos = false;

    protected override async Task OnInitializedAsync()
    {
        Solicitud.productos = Productos;
        Solicitud.tipoSolicitud = TipoSolicitud;
        string Username = await Js.GetFromLocalStorage("username");
        var Responsable = await Http.GetJsonAsync<UsuarioModel>("http://localhost:8080/usuario/username/" + Username);

        if (Responsable != null)
        {
            Panolero = Responsable.panolero;
            if (Panolero != null)
            {
                Solicitud.panolero = Panolero;
                NombrePanolero = Panolero.nombre + " " + Panolero.apellidoPaterno + " " + Panolero.apellidoMaterno;
            } else
            {
                NombrePanolero = Responsable.username;
            }
        }
    }

    private void getFechaDevolucion()
    {
        FechaDeEntrega = DateTime.Now.AddDays(int.Parse(DiasSolicitados)).ToString("dd/MM/yyyy");
    }

    private async Task OpenModal(string Tittle)
    {
        if (Tittle == "AddProductosModal")
        {
            clickToModalProductos = true;
        }
        await Js.ShowModal(Tittle);

        clickToModalProductos = false;
    }

    private void RefreshProductos()
    {
        Solicitud.productos = Productos;
    }

    private void RefreshSolicitante()
    {
        Usuario = Solicitud.usuario;
        if (Usuario.alumno != null)
        {
            NombreSolicitante = Usuario.alumno.nombre + " " + Usuario.alumno.apellidoPaterno + " " + Usuario.alumno.apellidoMaterno;
            RutSolicitante = Usuario.alumno.rut;
            PerfilSolicitante = Usuario.perfil;
            EscuelaSolicitante = Usuario.alumno.carrera.escuela.nombre;
        }
        if (Usuario.docente != null)
        {
            NombreSolicitante = Usuario.docente.nombre + " " + Usuario.docente.apellidoPaterno + " " + Usuario.docente.apellidoMaterno;
            RutSolicitante = Usuario.docente.rut;
            PerfilSolicitante = Usuario.perfil;
            EscuelaSolicitante = Usuario.docente.escuela.nombre;
        }
    }

    private void ClearView()
    {
        Usuario = new UsuarioModel();
        Solicitud.usuario = new UsuarioModel();
        Solicitud.productos = new List<ProductoModel>();
        TipoSolicitud = "NORMAL";
        NombreSolicitante = "";
        RutSolicitante = "";
        PerfilSolicitante = "";
        DiasSolicitados = "0";
        FechaDeEntrega = "Ingrese dias";
    }

    private async Task CreateSolicitud()
    {
        Solicitud.tipoSolicitud = TipoSolicitud;
        if (Solicitud.usuario == null && Solicitud.panolero == null && Solicitud.tipoSolicitud == null)
        {
            await Js.MostrarMensaje("Error!", "Verifíque que todos los datos esten correctos y vuelva a intentarlo.", TipoMensajeSweetAlert.error);
        } else
        {
            if (Solicitud.productos == null || Solicitud.productos.Count == 0)
            {
                await Js.MostrarMensaje("Error!", "Verifíque que todos los datos esten correctos y vuelva a intentarlo.", TipoMensajeSweetAlert.error);
            } else
            {
                var response = await Js.Confirm("¿Estas seguro/a?", "Confirma la solicitud.", TipoMensajeSweetAlert.question);

                if (response)
                {
                    string username = await Js.GetFromLocalStorage("username");
                    UsuarioModel usuario = await Http.GetJsonAsync<UsuarioModel>("http://localhost:8080/usuario/username/" + username);
                    Solicitud.logResponsable = usuario.id.ToString();

                    if (Solicitud.tipoSolicitud == "ESPECIAL")
                    {
                        Solicitud.diasSolicitados = DiasSolicitados;
                    }

                    var requestMessage = new HttpRequestMessage()
                    {
                        Method = new HttpMethod("POST"),
                        RequestUri = new Uri("http://localhost:8080/solicitud"),
                        Content = new StringContent(
                        Solicitud.CreateFormatJson(Solicitud)
                    )
                    };

                    requestMessage.Content.Headers.ContentType = new System.Net.Http.Headers.MediaTypeHeaderValue("application/json");
                    requestMessage.Content.Headers.TryAddWithoutValidation("x-custom-header", "value");

                    var result = await Http.SendAsync(requestMessage);

                    await Js.MostrarMensaje("Agregada!", "Se ha agregado la solicitud correctamente", TipoMensajeSweetAlert.success);
                    ClearView();
                };
            }
        }
    }
}
@page "/solicitudes/{id}"
@layout Layout.SolicitudesLayout
@attribute [Authorize]

@inject HttpClient Http
@inject IJSRuntime Js;
@inject NavigationManager Navigate

@using System.Net.Http
@using DataModel
@using Modals

@if (Solicitud == null || Solicitud.id == 0)
{
    <div class="row justify-content-center">
        <img src="images/loading.svg" alt="Cargando" />
    </div>
}
else
{
    <div id="infoSolicitud" class="py-3 col-12">
        <div class="py-3">
            <div class="row justify-content-center">
                <div class="progressbar-wrapper">
                    <ul class="progressbar" style="margin-left: 26%">
                        @if (Solicitud.estado == "pendiente" || Solicitud.estado == "esperando")
                        {
                            <li class="active">Crear Solicitud</li>
                            <li class="">Entregar Productos</li>
                            <li class="">Recibir Productos Devuelta</li>
                        }
                        else if (Solicitud.estado == "entregada")
                        {
                            <li class="">Crear Solicitud</li>
                            <li class="active">Entregar Productos</li>
                            <li class="">Recibir Productos Devuelta</li>
                        }
                        else
                        {
                            <li class="">Crear Solicitud</li>
                            <li class="">Entregar Productos</li>
                            <li class="active">Recibir Productos Devuelta</li>
                        }

                    </ul>
                </div>
            </div>
        </div>

        <div class="shadow card">
            <div class="card-body">
                <div class="col-12">
                    <div class="row justify-content-between align-items-center">
                        <div class="d-flex align-items-center">
                            <div class="px-3">
                                <h3>Solicitud @Solicitud.id</h3>
                            </div>
                            @if (IsDisabled)
                            {
                                <div class="border-left">
                                    <a class="text-decoration-none text-muted px-3" @onclick="@(e => generatePdf("infoSolicitud"))">
                                        <span class="oi oi-data-transfer-download px-1"></span> Descargar PDF
                                    </a>
                                </div>
                            }
                        </div>
                        <button type="button" class="btn btn-dark"><span class="oi oi-arrow-thick-left"></span> Atrás</button>
                    </div>
                </div>
            </div>
        </div>

        <div  class="row py-3">
            <div id="Solicitud" class="pr-3 col-6">
                <div id="infoCard" class="shadow card" style="background-color: @bgInfoCard">
                    <div class="card-body">
                        <div class="col-12">
                            <div class="row justify-content-between">
                                <h4>Información</h4>
                                @if (Solicitud.estado == "pendiente" || Solicitud.estado == "esperando")
                                {
                                    <div class="d-flex">
                                        <a class="text-danger @IsEditing px-3" style="font-size: 170%"><span class="oi oi-x" @onclick="@(e => EditInfo(true))"></span></a>
                                        <a class="@ChangeText" style="font-size: 170%"><span class="oi @ChangeIcon" @onclick="@(e => EditInfo(false))"></span></a>
                                    </div>
                                }
                            </div>
                        </div>
                        <EditForm Model="Solicitud" OnValidSubmit="@(e =>EditSolicitud(Solicitud))">
                            <div class="form-row">
                                <div class="form-group d-flex col-6">
                                    <p>Estado</p>
                                    <div class="px-1">
                                        <p class="badge badge-pill badge-warning">@Solicitud.estado</p>
                                    </div>
                                </div>
                                <div class="form-group d-flex col-6">
                                    <p>Tipo de solicitud</p>
                                    <div class="px-1">
                                        <p class="badge badge-pill badge-info">@Solicitud.tipoSolicitud</p>
                                    </div>
                                </div>
                            </div>
                            <div class="form-row">
                                <div class="form-group col-6">
                                    <label>Fecha de creación</label>
                                    <input type="text" class="form-control" disabled @bind="Solicitud.fechaCreacion" />
                                </div>
                                <div class="form-group col-6">
                                    <label>Ultima actualización</label>
                                    <input type="text" class="form-control" disabled @bind="Solicitud.fechaActualizacion" />
                                </div>
                            </div>
                            <hr />
                            @if (Solicitud.usuario != null)
                            {
                                @if (Solicitud.usuario.perfil == "ALUMNO" && Solicitud.usuario.alumno != null)
                                {
                                    <div class="form-group">
                                        <div class="col-12 py-2">
                                            <div class="row justify-content-between">
                                                <label>Nombre solicitante</label>
                                                <button type="button" class="btn btn-primary btn-sm @IsEditing" @onclick="@(e => OpenModal("ChangeUsuarioModal"))">Cambiar Alumno</button>
                                            </div>
                                        </div>
                                        <input type="text" class="form-control" disabled value="@(Solicitud.usuario.alumno.nombre +  " " + Solicitud.usuario.alumno.apellidoPaterno + " " + Solicitud.usuario.alumno.apellidoMaterno )" />
                                    </div>

                                    <div class="form-row">
                                        <div class="form-group col-6">
                                            <label>Rut solicitante</label>
                                            <input type="text" class="form-control" disabled @bind="Solicitud.usuario.alumno.rut" />
                                        </div>
                                        <div class="form-group col-6">
                                            <label>Perfil solicitante</label>
                                            <input type="text" class="form-control" disabled @bind="Solicitud.usuario.perfil" />
                                        </div>
                                    </div>
                                }
                                @if (Solicitud.usuario.perfil == "DOCENTE" && Solicitud.usuario.docente != null)
                                {
                                    <div class="form-group">
                                        <div class="col-12 py-2">
                                            <div class="row justify-content-between">
                                                <label>Nombre solicitante</label>
                                                <button type="button" class="btn btn-primary btn-sm @IsEditing" @onclick="@(e => OpenModal("ChangeUsuarioModal"))">Cambiar Docente</button>
                                            </div>
                                        </div>
                                        <input type="text" class="form-control" disabled value="@(Solicitud.usuario.docente.nombre +  " " + Solicitud.usuario.docente.apellidoPaterno + " " + Solicitud.usuario.docente.apellidoMaterno )" />
                                    </div>

                                    <div class="form-row">
                                        <div class="form-group col-6">
                                            <label>Rut solicitante</label>
                                            <input type="text" class="form-control" disabled @bind="Solicitud.usuario.docente.rut" />
                                        </div>
                                        <div class="form-group col-6">
                                            <label>Perfil solicitante</label>
                                            <input type="text" class="form-control" disabled @bind="Solicitud.usuario.perfil" />
                                        </div>
                                    </div>
                                }
                            }
                            @if (Solicitud.panolero != null)
                            {
                                <hr />
                                <div class="form-group">
                                    <label>Nombre panolero responsable</label>
                                    <input type="text" class="form-control" disabled value="@(Solicitud.panolero.nombre + " " + Solicitud.panolero.apellidoPaterno + " " + Solicitud.panolero.apellidoMaterno)" />
                                </div>
                            }
                            <div class="form-group">
                                <label>Comentarios</label>
                                <textarea class="form-control" rows="3" disabled="@IsDisabled" @bind="Solicitud.comentario"></textarea>
                            </div>
                        </EditForm>
                    </div>
                </div>
            </div>
            <div class="pl-3 col-6">
                <div id="ProductCard" class="shadow card">
                    <div class="card-body">
                        <div class="col-12">
                            <div class="row justify-content-between">
                                <h4>Productos</h4>
                                @if (Solicitud.estado == "pendiente" || Solicitud.estado == "esperando")
                                {
                                    <a class="text-warning" style="font-size: 170%"><span class="oi oi-pencil" @onclick="@(e => OpenModal("AddProductosModal"))"></span></a>
                                }
                            </div>
                        </div>
                        <div class="py-3">
                            <div class="table-responsive">
                                <table class="table">
                                    <thead class="thead-dark">
                                        <tr>
                                            <th scope="col">Id</th>
                                            <th scope="col">Nombre</th>
                                            <th scope="col">Subcategoria</th>
                                            <th scope="col">Categoria</th>
                                            <th scope="col">Escuela</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @if (Solicitud.productos != null)
                                        {
                                            @foreach (ProductoModel Producto in Solicitud.productos)
                                            {
                                                <tr>
                                                    <th scope="row">@Producto.id</th>
                                                    <td>@Producto.nombre</td>
                                                    <td>@Producto.subcategoria.nombre</td>
                                                    <td>@Producto.subcategoria.categoria.nombre</td>
                                                    <td>@Producto.escuela.nombre</td>
                                                </tr>
                                            }
                                        }
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
                @if (Solicitud.estado == "pendiente")
                {
                    <div class="py-3">
                        <button class="btn btn-success btn-lg btn-block" @onclick="@(e => HandlerProductosTransaction(Solicitud))"><span class="oi oi-check"></span> Entregar productos</button>
                    </div>
                }
                @if (Solicitud.estado == "entregada")
                {
                    <div class="py-3">
                        <button class="btn btn-success btn-lg btn-block" @onclick="@(e => HandlerProductosTransaction(Solicitud))"><span class="oi oi-check"></span> Recibir productos</button>
                    </div>
                }
                @if (Solicitud.estado == "esperando")
                {
                    <div class="py-3">
                        <button class="btn btn-success btn-lg btn-block" @onclick="@(e => HandlerProductosTransaction(Solicitud))"><span class="oi oi-check"></span> Aprobar solicitud</button>
                    </div>
                }
            </div>
        </div>
    </div>
}

<PanolBlazor.Pages.Solicitudes.Modals.EditProductosModal ProductosSolicitud="Solicitud.productos" Solicitud="Solicitud" OnRefresh="OnInitializedAsync"></PanolBlazor.Pages.Solicitudes.Modals.EditProductosModal>
<PanolBlazor.Pages.Solicitudes.Modals.ChangeUsuarioModal Solicitante="Solicitud.usuario" Solicitud="Solicitud" OnRefresh="OnInitializedAsync"></PanolBlazor.Pages.Solicitudes.Modals.ChangeUsuarioModal>

@code {
    [Parameter] public string Id { get; set; }
    public bool IsDisabled = true;
    public string IsActived = "";
    public string ChangeText = "text-warning";
    public string IsEditing = "d-none";
    public string ChangeIcon = "oi-pencil";
    public string bgInfoCard = "";
    public SolicitudModel Solicitud = new SolicitudModel();

    protected override async Task OnInitializedAsync()
    {
        if (Id != null)
        {
            Solicitud = await Http.GetJsonAsync<SolicitudModel>("http://localhost:8080/solicitud/" + Id);
        }
    }

    private void OpenModal(string Tittle)
    {
        Js.ShowModal(Tittle);
    }

    private async Task EditInfo(bool exit)
    {
        if (IsDisabled)
        {
            IsActived = "active";
            ChangeIcon = "oi-check";
            ChangeText = "text-success";
            IsEditing = "d-block";
            bgInfoCard = "rgb(255, 193, 7, 0.05)";
            IsDisabled = false;
        }
        else
        {
            if (exit)
            {
                ChangeIcon = "oi-pencil";
                ChangeText = "text-warning";
                IsActived = "";
                IsEditing = "d-none";
                bgInfoCard = "";
                IsDisabled = true;

                return;
            }

            var response = await ConfirmEditSolicitud();

            if (response)
            {
                ChangeIcon = "oi-pencil";
                ChangeText = "text-warning";
                IsActived = "";
                IsEditing = "d-none";
                bgInfoCard = "";
                IsDisabled = true;
            }
        }
    }

    private async Task<bool> ConfirmEditSolicitud()
    {
        var response = await Js.Confirm("¿Estás seguro/a?", "Al confirmar se editará la solicitud.", TipoMensajeSweetAlert.question);

        if (response)
        {
            if (Solicitud.panolero == null)
            {
                string Username = await Js.GetFromLocalStorage("username");
                UsuarioModel Responsable = await Http.GetJsonAsync<UsuarioModel>("http://localhost:8080/usuario/username/" + Username);
                Solicitud.panolero = Responsable.panolero;
            }
            await EditSolicitud(Solicitud);
            await Js.MostrarMensaje("Editado!", "La solicitud se ha editado correctamente.", TipoMensajeSweetAlert.success);
        }

        return response;
    }

    private async Task EditSolicitud(SolicitudModel solicitud)
    {
        var requestMessage = new HttpRequestMessage()
        {
            Method = new HttpMethod("POST"),
            RequestUri = new Uri("http://localhost:8080/solicitud/" + solicitud.id.ToString()),
            Content = new StringContent(
                    solicitud.EditFormatJson(solicitud, solicitud.usuario.username, solicitud.panolero.rut, solicitud.productos)
                )
        };

        requestMessage.Content.Headers.ContentType = new System.Net.Http.Headers.MediaTypeHeaderValue("application/json");
        requestMessage.Content.Headers.TryAddWithoutValidation("x-custom-header", "value");

        var result = await Http.SendAsync(requestMessage);

        Console.WriteLine(result);
    }

    private async Task HandlerProductosTransaction(SolicitudModel solicitud)
    {
        string oldEstado = solicitud.estado.ToLower();
        string titulo = "";
        string mensaje = "";

        if (solicitud.panolero == null)
        {
            string Username = await Js.GetFromLocalStorage("username");
            UsuarioModel Responsable = await Http.GetJsonAsync<UsuarioModel>("http://localhost:8080/usuario/username/" + Username);
            if (Responsable.panolero != null)
            {
                solicitud.panolero = Responsable.panolero;
            }
            else
            {
                solicitud.panolero = new PanoleroModel();
            }
        }

        switch (oldEstado)
        {
            case "pendiente":
                solicitud.estado = "entregada";
                titulo = "Productos entregados!";
                mensaje = "Se han entregado los productos satisfactoriamente al usuario solicitante.";
                break;
            case "entregada":
                solicitud.estado = "completada";
                titulo = "Productos recibidos!";
                mensaje = "Se han recibido los productos correctamente. Asegúrese de notificar el estado del/los producto/s.";
                break;
            case "esperando":
                solicitud.estado = "pendiente";
                titulo = "Solicitud aceptada!";
                mensaje = "Se ha aceptado la solicitud correctamente.";
                break;
            default:
                break;
        }

        string username = await Js.GetFromLocalStorage("username");
        UsuarioModel usuario = await Http.GetJsonAsync<UsuarioModel>("http://localhost:8080/usuario/username/" + username);
        solicitud.logResponsable = usuario.id.ToString();

        await EditSolicitud(solicitud);
        await Js.MostrarMensaje(titulo, mensaje, TipoMensajeSweetAlert.success);
    }

    private async Task generatePdf(string id)
    {
        await Js.SaveAs(id);
    }
}

